// config
// --------------------------------

$am-form: (
  "height": 48px,
  "checkbox-height": 32px,
  "spacing": 1rem,
  "color": #111111,
  "placeholder": #888888,
  "background-color": #eeeeee,
  "border-width": 2px,
  "border-color": #cccccc,
  "valid": #9bd49b,
  "invalid": #ed9696
) !default;


// forms
// --------------------------------

@mixin am-input {
  display: block;
  width: 100%;
  height: map-get($am-form, "height");
  padding: 0 map-get($am-form, "spacing");
  margin-bottom: map-get($am-form, "spacing");
  font-size: 1rem;
  color: map-get($am-form, "color");
  background: map-get($am-form, "background");
  outline: none;
  appearance: none;
  border-radius: 0px;
  box-sizing: border-box;
  border: map-get($am-form, "border-width") solid map-get($am-form, "border-color");
  transition: border 300ms;

  &[disabled] {
    color: lighten(map-get($am-form, "color"), 50);
  }

  &:-moz-placeholder {
    opacity: 0.8;
    color: map-get($am-form, "placeholder");
  }

  &::-moz-placeholder {
    opacity: 0.8;
    color: map-get($am-form, "placeholder");
  }

  &:-ms-input-placeholder {
    opacity: 0.8;
    color: map-get($am-form, "placeholder");
  }

  &::-webkit-input-placeholder {
    opacity: 0.8;
    color: map-get($am-form, "placeholder");
  }

  &.valid,
  &.ng-dirty.ng-valid {
    border-color: map-get($am-form, "valid");
  }

  &.invalid,
  &.ng-dirty.ng-invalid {
    border-color: map-get($am-form, "invalid");
  }
}

textarea {
  @include am-input;
  height: 8em;
  padding: map-get($am-form, "spacing");
}

input {
  &[type="url"],
  &[type="tel"],
  &[type="text"],
  &[type="date"],
  &[type="time"],
  &[type="week"],
  &[type="email"],
  &[type="number"],
  &[type="search"],
  &[type="password"],
  &[type="datetime"],
  &[type="datetime-local"] {
    @include am-input;
  }
}


// select boxes
// --------------------------------

[data-select] {
  position: relative;
  width: 100%;
  height: map-get($am-form, "height");
  line-height: map-get($am-form, "height");
  margin-bottom: map-get($am-form, "spacing");
  overflow: hidden;
  background: map-get($am-form, "background");
  border: map-get($am-form, "border-width") solid map-get($am-form, "border-color");

  select {
    display: block;
    width: 100%; 
    height: 100%;
    padding: 0 map-get($am-form, "spacing");
    border: none;
    cursor: pointer;
    font-size: inherit;
    white-space: nowrap;
    border-radius: 0px;
    background-image: none;
    background-color: transparent;
    box-shadow: 0px;
    appearance: none;

    &:focus {
      outline: none;
    }
    
    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 map-get($am-form, "color");
    }
  }

  option {
    padding: 10px map-get($am-form, "spacing");
    background: #ffffff;
  }
}


// checkboxes
// --------------------------------

[data-checkbox] {
  position: relative;
  min-height: map-get($am-form, "checkbox-height");
  line-height: map-get($am-form, "checkbox-height");
  padding-left: map-get($am-form, "checkbox-height");
  margin-bottom: map-get($am-form, "spacing");
  
  &::before,
  &::after {
    display: table;
    content: " ";
  }
  
  &::after {
    clear: both;
  }

  input { 
    display: none;
  
    & + label {
      position: absolute;
      display: block;
      top: 0; 
      left: 0;
      width: map-get($am-form, "checkbox-height");
      height: map-get($am-form, "checkbox-height");
      vertical-align: middle;
      cursor: pointer;
      background: map-get($am-form, "background");
      border: map-get($am-form, "border-width") solid map-get($am-form, "border-color");
      
      & + label {
        display: block;
        float: left;
        margin-left: 1rem;
      }
    }

    &:checked + label {
      &::before,
      &::after {
        position: absolute;
        display: block;
        content: "";
        top: 50%; 
        left: 10%;
        width: 80%; 
        height: 1px;
        margin-top: -0.5px;
        background: map-get($am-form, "color"); 
      }
  
      &::before { 
        transform: rotate(-45deg);
      }
      
      &::after { 
        transform: rotate(45deg);
      }
    }
  }
}